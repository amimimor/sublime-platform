apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "sublime-rules-engine.fullname" . }}-bora-lite
  labels:
    {{- include "sublime-rules-engine.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "sublime-rules-engine.fullname" . }}-bora-lite
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "sublime-rules-engine.name" . }}-bora-lite
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "sublime-rules-engine.name" . }}-bora-lite
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
      - name: wait-for-mantis
        image: bitnami/kubectl:latest
        env:
        - name: MANTIS_POD_LABEL
          value: "{{ include "sublime-rules-engine.name" . }}-mantis"
        command:
          - /bin/sh
          - -c
          - |
            echo "Waiting for mantis pod to be ready..."
            MANTIS_POD_NAME=""
            while [ -z "$MANTIS_POD_NAME" ]; do
              MANTIS_POD_NAME=$(kubectl get pods -l app.kubernetes.io/name=$MANTIS_POD_LABEL -o jsonpath='{.items[0].metadata.name}' 2>/dev/null)
              if [ -z "$MANTIS_POD_NAME" ]; then
                echo "Mantis pod not found yet, waiting..."
                sleep 5
              fi
            done
            echo "Mantis pod found: $MANTIS_POD_NAME. Waiting for migrations to complete..."
            until kubectl logs $MANTIS_POD_NAME | grep -q "Blocking migrations are up to date."; do
              echo "Migrations not complete yet, waiting..."
              sleep 15
            done
            echo "Mantis migrations are complete. Starting bora-lite."
      containers:
      - name: bora-lite
        image: "{{ .Values.image.bora_lite }}"
        imagePullPolicy: IfNotPresent
        envFrom:
        - secretRef:
            name: {{ include "sublime-rules-engine.fullname" . }}
        env:
        - name: POSTGRES_HOST
          value: {{ include "sublime-rules-engine.fullname" . }}-postgres
        - name: DB_RUN_MIGRATIONS
          value: "false"
        - name: PERSISTENT_STORAGE
          value: "/data"
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: persistent-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "local-path"
      resources:
        requests:
          storage: 10Gi 